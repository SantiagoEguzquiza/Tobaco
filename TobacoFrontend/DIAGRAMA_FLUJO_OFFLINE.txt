═══════════════════════════════════════════════════════════════════════════
                    🚀 SISTEMA OFFLINE - FLUJO DE DATOS
═══════════════════════════════════════════════════════════════════════════


┌─────────────────────────────────────────────────────────────────────────┐
│                         1. USUARIO CREA VENTA                           │
│                    (nuevaVenta_screen.dart)                             │
└──────────────────────────────┬──────────────────────────────────────────┘
                               │
                               ▼
┌─────────────────────────────────────────────────────────────────────────┐
│                      VentasProvider.crearVenta()                        │
│                                                                         │
│  await ventasProvider.crearVenta(venta)                                │
└──────────────────────────────┬──────────────────────────────────────────┘
                               │
                               ▼
┌─────────────────────────────────────────────────────────────────────────┐
│                 VentasOfflineService.crearVenta()                       │
│                                                                         │
│  DECISIÓN: ¿Hay conexión completa?                                     │
│  (Internet + Backend disponible)                                       │
└──────────────────────────────┬──────────────────────────────────────────┘
                               │
                ┌──────────────┴──────────────┐
                │                             │
           ✅ SÍ HAY                     ❌ NO HAY
           CONEXIÓN                      CONEXIÓN
                │                             │
                ▼                             ▼
┌───────────────────────────┐   ┌────────────────────────────────┐
│  RUTA ONLINE              │   │  RUTA OFFLINE                  │
│                           │   │                                │
│  1. VentasService         │   │  1. DatabaseHelper             │
│     .crearVenta()         │   │     .saveVentaOffline()        │
│                           │   │                                │
│  2. POST al backend       │   │  2. INSERT en SQLite           │
│     /api/Ventas           │   │     - ventas_offline           │
│                           │   │     - ventas_productos_offline │
│  3. ✅ Respuesta 200      │   │     - ventas_pagos_offline     │
│                           │   │                                │
│  4. Notificar UI          │   │  3. Estado: "pending"          │
│     "Venta creada"        │   │                                │
│     (Verde)               │   │  4. Notificar UI               │
│                           │   │     "Guardada localmente"      │
└───────────┬───────────────┘   │     (Naranja)                  │
            │                   │                                │
            │                   └────────────┬───────────────────┘
            │                                │
            │                                ▼
            │                   ┌────────────────────────────────┐
            │                   │  SINCRONIZACIÓN AUTOMÁTICA     │
            │                   │                                │
            │                   │  SyncService monitorea:        │
            │                   │  - Cada 5 minutos              │
            │                   │  - Al detectar conexión        │
            │                   └────────────┬───────────────────┘
            │                                │
            │                     ┌──────────▼──────────┐
            │                     │ ¿Hay conexión ahora?│
            │                     └──────────┬──────────┘
            │                                │
            │                           ✅ SÍ
            │                                │
            │                                ▼
            │                   ┌────────────────────────────────┐
            │                   │  PROCESO DE SINCRONIZACIÓN     │
            │                   │                                │
            │                   │  1. Obtener ventas "pending"   │
            │                   │     de SQLite                  │
            │                   │                                │
            │                   │  2. Para cada venta:           │
            │                   │     - POST al backend          │
            │                   │     - ¿Éxito?                  │
            │                   │                                │
            │                   │     ✅ Sí: marcar "synced"     │
            │                   │     ❌ No: marcar "failed"     │
            │                   │                                │
            │                   │  3. Actualizar contadores      │
            │                   │                                │
            │                   │  4. Notificar UI               │
            │                   └────────────┬───────────────────┘
            │                                │
            └────────────────────────────────┘


═══════════════════════════════════════════════════════════════════════════
                         📊 ESTADOS DE SINCRONIZACIÓN
═══════════════════════════════════════════════════════════════════════════

┌─────────────┐         ┌─────────────┐         ┌─────────────┐
│  PENDING    │────────▶│   SYNCED    │         │   FAILED    │
│             │   OK    │             │         │             │
│  📋 En cola │         │  ✅ Listo   │         │  ❌ Error   │
└─────────────┘         └─────────────┘         └──────┬──────┘
      ▲                                                 │
      │                                                 │
      └─────────────────────────────────────────────────┘
                     REINTENTAR
               (Manual o automático)


═══════════════════════════════════════════════════════════════════════════
                         🎨 COMPONENTES VISUALES
═══════════════════════════════════════════════════════════════════════════

1. SyncStatusWidget (Card completo)
   ┌────────────────────────────────────────────────┐
   │ 🟠 Ventas guardadas localmente - Sin conexión │
   │    Sincronizará cuando haya conexión      [⟳] │
   │                                                │
   │ 📋 3 ventas pendientes de sincronización      │
   │ ⚠️  1 venta fallida                           │
   └────────────────────────────────────────────────┘

2. SyncStatusBadge (Compacto para AppBar)
   ┌──────────┐
   │ 📤 4     │  ← Toca para ver detalles
   └──────────┘


═══════════════════════════════════════════════════════════════════════════
                      🗄️  ESTRUCTURA DE BASE DE DATOS
═══════════════════════════════════════════════════════════════════════════

Archivo: tobaco_offline.db

┌──────────────────────────────────────────────────────────────┐
│                    TABLA: ventas_offline                     │
├──────────────────────────────────────────────────────────────┤
│ id (PK)              │ INTEGER    │ Autoincremental         │
│ local_id (UNIQUE)    │ TEXT       │ "local_1698765432000"   │
│ cliente_id           │ INTEGER    │ ID del cliente          │
│ cliente_json         │ TEXT       │ Objeto cliente completo │
│ total                │ REAL       │ Total de la venta       │
│ fecha                │ TEXT       │ ISO8601                 │
│ sync_status          │ TEXT       │ pending/synced/failed   │
│ sync_attempts        │ INTEGER    │ Contador de intentos    │
│ error_message        │ TEXT       │ Si falla                │
│ created_at           │ TEXT       │ Timestamp creación      │
│ updated_at           │ TEXT       │ Timestamp actualización │
└──────────────────────────────────────────────────────────────┘
                             │
                             │ 1:N
                             ▼
┌──────────────────────────────────────────────────────────────┐
│             TABLA: ventas_productos_offline                  │
├──────────────────────────────────────────────────────────────┤
│ id (PK)              │ INTEGER    │ Autoincremental         │
│ venta_local_id (FK)  │ TEXT       │ → ventas_offline        │
│ producto_id          │ INTEGER    │ ID del producto         │
│ nombre               │ TEXT       │ Nombre del producto     │
│ cantidad             │ REAL       │ Cantidad vendida        │
│ precio               │ REAL       │ Precio unitario         │
│ precio_final_calc    │ REAL       │ Con descuentos          │
└──────────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════════════════════
                        🔄 CICLO DE SINCRONIZACIÓN
═══════════════════════════════════════════════════════════════════════════

    ⏰ Timer (cada 5 min)
         │
         ▼
    ┌─────────┐
    │ Verificar│
    │ conexión │
    └────┬────┘
         │
    ¿Hay conexión?
         │
    ┌────┴────┐
    │         │
   NO        SÍ
    │         │
    └─────┐   ▼
          │  ┌──────────────┐
          │  │ Obtener      │
          │  │ ventas       │
          │  │ "pending"    │
          │  └──────┬───────┘
          │         │
          │    ¿Hay ventas?
          │         │
          │    ┌────┴────┐
          │    │         │
          │   NO        SÍ
          │    │         │
          │    │    ┌────▼──────────┐
          │    │    │ Para cada una: │
          │    │    │ - Enviar API  │
          │    │    │ - Marcar OK/  │
          │    │    │   Failed      │
          │    │    └────┬──────────┘
          │    │         │
          │    │    ┌────▼──────────┐
          │    │    │ Notificar UI  │
          │    │    │ Actualizar    │
          │    │    │ contadores    │
          │    │    └───────────────┘
          │    │
          └────┴──────▶ Esperar
                      próximo ciclo


═══════════════════════════════════════════════════════════════════════════
                        🌐 MONITOREO DE CONECTIVIDAD
═══════════════════════════════════════════════════════════════════════════

ConnectivityService monitorea DOS cosas:

1. INTERNET (connectivity_plus)
   ┌────────────────┐
   │ WiFi           │───┐
   │ Datos Móviles  │───┤
   │ Ethernet       │───┤─▶ hasInternetConnection
   └────────────────┘   │

2. BACKEND (http check)
   ┌────────────────┐
   │ GET /api/health│───▶ isBackendAvailable
   │ Timeout: 5s    │
   └────────────────┘

   CONEXIÓN COMPLETA = Internet ✅ + Backend ✅


═══════════════════════════════════════════════════════════════════════════
                           📱 FLUJO EN LA UI
═══════════════════════════════════════════════════════════════════════════

Usuario en pantalla Nueva Venta:

    ┌────────────────────────────┐
    │  Nueva Venta               │
    ├────────────────────────────┤
    │ [SyncStatusWidget]         │ ← Muestra estado actual
    │                            │
    │ Cliente: [Juan Pérez]      │
    │                            │
    │ Productos:                 │
    │  - Cigarros x2   $20.00    │
    │  - Dulces x1     $5.00     │
    │                            │
    │ Total: $25.00              │
    │                            │
    │        [Guardar Venta]     │ ← Usuario presiona
    └────────────────────────────┘
                 │
                 ▼
    ┌────────────────────────────┐
    │  Procesando...             │
    └────────────────────────────┘
                 │
      ┌──────────┴──────────┐
      │                     │
  CON CONEXIÓN        SIN CONEXIÓN
      │                     │
      ▼                     ▼
┌──────────────┐    ┌──────────────────┐
│ ✅ Venta     │    │ 🟠 Venta guardada│
│ creada       │    │ localmente.      │
│ exitosamente │    │ Se sincronizará  │
│              │    │ con conexión.    │
└──────────────┘    └──────────────────┘


═══════════════════════════════════════════════════════════════════════════
                        🎯 PUNTOS CLAVE DEL SISTEMA
═══════════════════════════════════════════════════════════════════════════

✅ OFFLINE-FIRST
   Las ventas NUNCA se pierden. Siempre se guardan primero localmente
   y luego se sincronizan.

✅ TRANSPARENTE
   El usuario no necesita saber si está online u offline. El sistema
   decide automáticamente.

✅ AUTOMÁTICO
   La sincronización ocurre en background sin intervención del usuario.

✅ RESILIENTE
   Si falla una sincronización, se reintenta automáticamente. Las ventas
   nunca se pierden.

✅ INFORMATIVO
   Widgets visuales mantienen al usuario informado del estado en todo
   momento.

✅ RECUPERABLE
   Si hay errores, el usuario puede forzar sincronización manual o
   reintentar ventas fallidas.


═══════════════════════════════════════════════════════════════════════════
                              🚀 RESUMEN FINAL
═══════════════════════════════════════════════════════════════════════════

PROBLEMA RESUELTO:
  ❌ Antes: Ventas se perdían sin conexión
  ✅ Ahora: Todas las ventas se guardan y sincronizan automáticamente

ARQUITECTURA:
  • 5 servicios nuevos (Connectivity, Database, Sync, OfflineService)
  • 1 provider actualizado (VentasProvider)
  • 2 widgets UI (SyncStatusWidget, SyncStatusBadge)
  • 1 endpoint backend (/api/health)

TECNOLOGÍAS:
  • SQLite (sqflite)
  • Conectividad (connectivity_plus)
  • Provider (state management)
  • Dart Async (Streams, Futures, Timers)

RESULTADO:
  📴 Sistema 100% funcional offline
  🔄 Sincronización automática en background
  🎨 UI informativa y profesional
  🛡️  Cero pérdida de datos

═══════════════════════════════════════════════════════════════════════════

